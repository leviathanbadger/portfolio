name: Build/Deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Node v14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache ~/.npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install NPM dependencies
        run: npm ci
      - name: Build Angular application
        run: npm run build -- --prod
      - name: 'Upload Build Artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: prod-dist
          path: dist
          if-no-files-found: error

  deploy-prod:
    environment: Production
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: prod-dist
          path: dist
      - name: Publish build artifact to S3
        run: |
          aws s3 sync ${DRYRUN:+--dryrun} dist/bls-portfolio/ s3://brandonslade-me/dist/ \
              --exclude 3rdpartylicenses.txt \
              --exclude index.html \
              --storage-class INTELLIGENT_TIERING

          aws s3 cp ${DRYRUN:+--dryrun} dist/bls-portfolio/index.html s3://brandonslade-me/dist/index.html \
              --storage-class INTELLIGENT_TIERING \
              --cache-control max-age=10

          aws s3 cp ${DRYRUN:+--dryrun} dist/bls-portfolio/3rdpartylicenses.txt s3://brandonslade-me/dist/3rdpartylicenses.txt \
              --storage-class INTELLIGENT_TIERING \
              --cache-control max-age=10
